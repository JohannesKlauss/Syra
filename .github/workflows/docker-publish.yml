name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    # needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      #- name: Log into GitHub Container Registry
        # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
      #  run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DO registry
        run: doctl registry login

      - name: create env file
        run: |
          cat <<EOT >> .env
          LIVE_DB_USER=${{secrets.POSTGRES_USER}}
          LIVE_DB_PASSWORD=${{secrets.POSTGRES_PASSWORD}}
          LIVE_DB_DB=${{secrets.POSTGRES_DB}}

          API_GATEWAY_DB_HOST=${{secrets.REDIS_HOST}}
          API_GATEWAY_DB_PASSWORD=${{secrets.REDIS_PASSWORD}}
          API_GATEWAY_DB_SESSION_SECRET=${{secrets.REDIS_SESSION_SECRET}}
          API_GATEWAY_DB_REPLICATION_MODE=master

          SYRA_LIVE_GRAPHQL_ENDPOINT=${{secrets.SYRA_LIVE_GRAPHQL_ENDPOINT}}

          REPO_HOST=registry.digitalocean.com/syra-do
          EOT

      - name: Build and push Docker images to DO Registry
        run: |
          REF=$(git rev-parse --short HEAD)
          COMPONENTS=$(find services/syra-*/Dockerfile)

          for CMP in $COMPONENTS
          do
            IMAGE_NAME=$(dirname $CMP)
            IMAGE_ID=registry.digitalocean.com/syra-do/$IMAGE_NAME

            echo build and push $IMAGE_NAME:$REF

            docker build $IMAGE_NAME --tag $(echo "$IMAGE_ID" | tr '[:upper:]' '[:lower:]'):$REF
            docker push $(echo "$IMAGE_ID" | tr '[:upper:]' '[:lower:]'):$REF

            echo "$IMAGE_NAME done! \n\n"
          done