query project($id: String!) {
    project(where: {id: $id}) {
        id
        createdAt
        name
        owner {
            id
            name
        }
        isInitialized
        members(where: {projectId: {equals: $id}}) {
            user {
                ...BaseUser
            }
        }
        content
    }
}

query projectFiles($id: String!) {
    project(where: {id: $id}) {
        id
        audioAssets {
            audioAssetId
            createdAt
        }
    }
}

mutation updateName($projectId: String!, $name: String!) {
    updateProject(where: {id: $projectId}, data: {name: {set: $name}}) {
        id
    }
}

mutation addMember($projectId: String!, $userId: String!) {
    createUsersOnProjects(data: {user: {connect: {id: $userId}}, project: {connect: {id: $projectId}}}) {
        user {
            ...BaseUser
        }
    }
}

mutation removeMember($projectId: String!, $userId: String!) {
    deleteUsersOnProjects(where: {userId_projectId: {userId: $userId, projectId: $projectId}}) {
        userId
    }
}

subscription changes($projectId: String!) {
    changes(projectId: $projectId) {
        id
        authorId
        changes
    }
}

subscription assetTranscoded($projectId: String!, $assetId: String!) {
    assetTranscoded(projectId: $projectId, assetId: $assetId) {
        id
    }
}

mutation publishChange($changeId: String!, $projectId: String!, $date: Timestamp!, $changes: JSONObject!, $me: String) {
    publishChange(id: $changeId, date: $date, projectId: $projectId, changes: $changes, authorId: $me) {
        id
    }
}

mutation updateProjectContent($content: JSON!, $id: String!) {
    updateProject(where: {id: $id}, data: {content: $content, isInitialized: {set: true}}) {
        id
    }
}